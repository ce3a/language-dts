'scopeName': 'source.dts'
'name': 'Devicetree Source'
'fileTypes': ['dts', 'dtsi']

patterns: [
  {
    include: '#nodes'
  }
  {
    include: '#labels'
  }
  {
    include: '#decnumbers'
  }
  {
    include: '#hexnumbers'
  }
  {
    include: '#hexbytes'
  }
  {
    include: '#strings'
  }
  {
    include: '#references'
  }
  {
    include: '#keywords'
  }
  {
    include: '#comments'
  }
]

repository:
  nodes:
    patterns: [
      {
        match: '([[:alpha:][:digit:]]+@[0-9a-fA-F]+|[[:alpha:][:digit:]_]+)([[:space:]]*{)'
        'captures':
          '1':
            'name': 'entity.name.section.dts'
        name: ''
      }
    ]
  labels:
    patterns: [
      {
        match: '\\w[[:alpha:][:digit:]_-]+:'
        name: 'entity.name.tag.dts'
      }
    ]
  decnumbers:
    patterns: [
      {
        match: '\\b[[:digit:]]+\\b'
        name: 'constant.numeric.integer.decimal.dts'
      }
    ]
  hexnumbers:
    patterns: [
      {
        match: '0x\\h+'
        name: 'constant.numeric.integer.hexadecimal.dts'
      }
    ]
  hexbytes:
    patterns: [
      {
        begin: '\\['
        end: '\\]'
        name: ''
        patterns: [
          {
            match: '\\b\\h+\\b'
            name: 'constant.numeric.integer.hexadecimal.dts'
          }
          {
            match: '\\w[[:alpha:][:digit:]_-]+:'
            name: 'entity.name.tag.dts'
          }
        ]
      }
    ]
  strings:
    patterns: [
      {
        begin: '"'
        beginCaptures:
          '0':
            name: 'punctuation.definition.string.begin.dts'
        end: '"'
        endCaptures:
          '0':
            name: 'punctuation.definition.string.end.dts'
        name: 'string.quoted.double.dts'
      }
    ]
  references:
    patterns: [
      {
        match: '&[[:alpha:][:digit:]_-]+'
        name: 'constant.language.dts'
      }
    ]
  keywords:
    patterns: [
      {
        match: '/[[:alpha:][:digit:]_-]+/'
        name: 'keyword.other.dts'
      }
    ]
  comments:
    patterns: [
      {
        begin: '//'
        end: '\\n'
        name: 'comment.line.double-slash.dts'
      }
      {
        begin: '/\\*'
        beginCaptures:
          '0':
            name: 'punctuation.definition.comment.begin.dts'
        end: '\\*/'
        endCaptures:
          '0':
            name: 'punctuation.definition.comment.end.dts'
        name: 'comment.block.scilab'
      }
    ]
